# Generated by Django 3.1.6 on 2021-12-13 13:08

import attach.myFields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='phone number')),
                ('company_name', models.CharField(blank=True, max_length=50)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date_joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_lecturer', models.BooleanField(default=False)),
                ('is_supervisor', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_fullname', models.CharField(max_length=255)),
                ('registration_no', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('county', models.CharField(max_length=255)),
                ('company_phone_no', models.CharField(max_length=50)),
                ('supervisor_name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=255)),
                ('punctual', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('regulations', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('workmanship', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('workout', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('adaptability', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('commu', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('reliability', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('team_work', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('overall_assessment', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=255)),
                ('general_remarks', models.TextField()),
                ('assessed_by', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('mdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lecturer',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_fullname', models.CharField(max_length=255)),
                ('registration_no', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('county', models.CharField(max_length=200)),
                ('company_phone_no', models.CharField(max_length=255)),
                ('supervisor_name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=100)),
                ('period_from', models.DateField(blank=True, null=True)),
                ('period_to', models.DateField(blank=True, null=True)),
                ('punctual', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('regulations', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('workmanship', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('workout', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('adaptability', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('commu', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('reliability', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('team_work', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('overall_assessment', models.CharField(choices=[('excellent', 'excellent'), ('good', 'good'), ('average', 'average'), ('fair', 'fair'), ('poor', 'poor')], max_length=100)),
                ('general_remarks', models.TextField()),
                ('assessed_by', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('assessed', 'assessed'), ('notassessed', 'notassessed')], max_length=255)),
                ('position', models.CharField(blank=True, max_length=255)),
                ('mdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='StudentDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('student_name', models.CharField(max_length=255)),
                ('coursename', models.CharField(max_length=255)),
                ('regno', models.CharField(max_length=100)),
                ('year_of_study', models.CharField(choices=[('Yr1 Sem2', 'yr1 Sem2'), ('yr2 Sem2', 'yr2 Sem2'), ('yr3 Sem2', 'yr3 Sem2'), ('yr4 Sem2', 'yr4 Sem2')], max_length=100)),
                ('school', models.CharField(choices=[('SCI', 'SCI'), ('SBE', 'SBE'), ('SHS', 'SHS'), ('SEA', 'SEA'), ('SED', 'SED'), ('SN', 'SN'), ('SPAS', 'SPAS'), ('SAFS', 'SAFS')], max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('staff_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=50)),
                ('school', models.CharField(choices=[('SCI', 'SCI'), ('SBE', 'SBE'), ('SHS', 'SHS'), ('SEA', 'SEA'), ('SED', 'SED'), ('SN', 'SN'), ('SPAS', 'SPAS'), ('SAFS', 'SAFS')], max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Staffs',
            },
        ),
        migrations.CreateModel(
            name='Elogbook',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('workdone', models.TextField()),
                ('skills', models.TextField(default=1)),
                ('mdate', models.DateField()),
                ('dayOfTheWeek', attach.myFields.DayOfTheWeekField(choices=[('Friday', 'Friday'), ('Monday', 'Monday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday'), ('Thursday', 'Thursday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday')], max_length=10)),
                ('remarks', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='attach.studentdetails')),
            ],
            options={
                'verbose_name': 'Elogbook',
                'verbose_name_plural': 'Elogbooks',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='document/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='attach.studentdetails')),
            ],
        ),
    ]
